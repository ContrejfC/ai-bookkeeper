# Render.com Blueprint for AI Bookkeeper Staging
# Auto-deploys on push to main, runs migrations post-deploy

services:
  # Web service (FastAPI + Uvicorn)
  - type: web
    name: ai-bookkeeper-web
    env: docker
    plan: starter
    region: oregon
    autoDeploy: true
    healthCheckPath: /healthz
    dockerfilePath: ./Dockerfile
    envVars:
      # Database (set as secret in Render dashboard)
      - key: DATABASE_URL
        sync: false
      
      # Redis (set as secret in Render dashboard)
      - key: REDIS_URL
        sync: false
      
      # Security secrets (set in Render dashboard)
      - key: JWT_SECRET_KEY
        sync: false
      
      - key: PASSWORD_RESET_SECRET
        generateValue: true
        sync: false
      
      # App configuration
      - key: AUTH_MODE
        value: jwt
      
      - key: UI_ASSESSMENT
        value: "1"
      
      - key: AUTOPOST_ENABLED
        value: "false"
      
      - key: GATING_THRESHOLD
        value: "0.90"
      
      - key: DEFAULT_THRESHOLD
        value: "0.90"
      
      - key: LLM_BUDGET_CAP_USD
        value: "50"
      
      # OCR
      - key: OCR_PROVIDER
        value: tesseract
      
      # CORS (update with your Render domain after first deploy)
      - key: CORS_ALLOWED_ORIGINS
        value: https://ai-bookkeeper-web.onrender.com
      
      # Optional: OpenAI (set as secret if using LLM)
      - key: OPENAI_API_KEY
        sync: false
      
      # Optional: S3 (for production artifacts)
      - key: S3_ENDPOINT
        sync: false
      
      - key: S3_BUCKET
        sync: false
      
      - key: S3_ACCESS_KEY_ID
        sync: false
      
      - key: S3_SECRET_ACCESS_KEY
        sync: false
      
      # Optional: Email
      - key: SMTP_HOST
        sync: false
      
      - key: SMTP_PORT
        value: "587"
      
      - key: SMTP_USER
        sync: false
      
      - key: SMTP_PASSWORD
        sync: false
      
      - key: SMTP_FROM_EMAIL
        sync: false
      
      # Optional: Slack
      - key: SLACK_WEBHOOK_URL
        sync: false
      
      # Optional: Stripe (test mode)
      - key: STRIPE_SECRET_KEY
        sync: false
      
      - key: STRIPE_WEBHOOK_SECRET
        sync: false
      
      # Optional: Xero (test mode)
      - key: XERO_CLIENT_ID
        sync: false
      
      - key: XERO_CLIENT_SECRET
        sync: false
    
    # Start command (Render assigns PORT env var, but we use 10000)
    startCommand: uvicorn app.api.main:app --host 0.0.0.0 --port 10000
    
    # Run migrations automatically after each deploy
    postDeployCommand: python -m alembic upgrade head

  # Background Worker (RQ)
  - type: worker
    name: ai-bookkeeper-worker
    env: docker
    plan: starter
    region: oregon
    autoDeploy: true
    dockerfilePath: ./Dockerfile
    envVars:
      # Inherit from web service
      - key: DATABASE_URL
        sync: false
      
      - key: REDIS_URL
        sync: false
      
      - key: JWT_SECRET_KEY
        sync: false
      
      - key: AUTOPOST_ENABLED
        value: "false"
      
      - key: GATING_THRESHOLD
        value: "0.90"
      
      - key: OCR_PROVIDER
        value: tesseract
      
      - key: OPENAI_API_KEY
        sync: false
    
    # Start RQ worker
    startCommand: python -m rq worker -u $REDIS_URL ai_bookkeeper

  # Cron Job for Analytics Rollup (daily at 02:00 UTC)
  - type: cron
    name: ai-bookkeeper-analytics
    env: docker
    plan: starter
    region: oregon
    dockerfilePath: ./Dockerfile
    schedule: "0 2 * * *"
    envVars:
      - key: DATABASE_URL
        sync: false
      
      - key: S3_BUCKET
        sync: false
      
      - key: S3_ACCESS_KEY_ID
        sync: false
      
      - key: S3_SECRET_ACCESS_KEY
        sync: false
    
    # Run analytics rollup
    startCommand: python jobs/analytics_rollup.py

# Note: Create Postgres and Redis as separate Render resources:
# 1. Render Dashboard → New → PostgreSQL
#    - Name: ai-bookkeeper-db
#    - Plan: Starter ($7/month)
#    - Copy connection string to DATABASE_URL secret
#
# 2. Render Dashboard → New → Redis
#    - Name: ai-bookkeeper-redis
#    - Plan: Starter ($3/month)
#    - Copy connection string to REDIS_URL secret
